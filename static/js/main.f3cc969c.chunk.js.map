{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","state","error","isLoaded","events","selectedIndex","cellCount","this","setState","console","log","intervalId","setInterval","timer","fetch","then","res","json","eventsTmp","length","concat","clearInterval","message","className","style","transform","map","value","index","rotateX","position","distanceFromSelected","Math","abs","opacity","title","rendered","acf","local","date","textAlign","onClick","previousEvent","nextEvent","React","Component","About","Works","projects","App","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","placeholder","src","logo","alt","to","Button","variant","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f3cc969c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d55acb24.svg\";","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Button } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n        <a className=\"navbar-brand\" href=\"#\">RAFAEL MAIA</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">Link</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n            </li>\n          </ul>\n          <form className=\"form-inline mt-2 mt-md-0\">\n            <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"></input>\n            <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n          </form>\n        </div>\n      </nav>\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <Router>\n          <div>\n            <nav>\n              <ul>\n                <li><Link to=\"/\">\n                  <Button variant=\"primary\">Home</Button>\n                </Link>\n\n                </li>\n                <li>\n                  <Link to=\"/works\">Works</Link>\n                </li>\n                <li>\n                  <Link to=\"/about\">Bio</Link>\n                </li>\n              </ul>\n            </nav>\n\n            {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/works\">\n                <Works />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      events: [],\n      selectedIndex: 0,\n      cellCount: 6\n    };\n  }\n\n  timer() {\n    this.setState({ selectedIndex: this.state.selectedIndex + 1 });\n  }\n\n  previousEvent() {\n    this.setState({\n      selectedIndex: this.state.selectedIndex - 1\n    });\n    console.log(this.state)\n  }\n  nextEvent() {\n    this.setState({\n      selectedIndex: this.state.selectedIndex + 1\n    });\n  }\n\n\n  componentDidMount() {\n    var intervalId = setInterval(() => this.timer(), 3000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({ intervalId: intervalId });\n\n    fetch('https://rafaelmaia.000webhostapp.com/wp-json/wp/v2/events', /*{\n      method: 'GET',\n      mode: 'no-cors',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'application/json',\n        'cookie': '__test=48031c46594cb39af38e8220a84d54de'\n      }\n    }*/)\n      .then(res => res.json())\n      .then(\n        (events) => {\n          console.log(events)\n          let eventsTmp = events\n          if (events.length > 0) {\n            while (events.length % this.state.cellCount !== 0) {\n              events = events.concat(eventsTmp)\n              console.log(events)\n            }\n          }\n\n          this.setState({\n            isLoaded: true,\n            events: events\n          });\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n\n  render() {\n    const { error, isLoaded, events, selectedIndex, cellCount } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <h2>Events</h2>\n          <div className=\"scene\">\n            <div className=\"carousel\" style={{ transform: 'translateZ(-120px) rotateX(' + (selectedIndex / cellCount) * -360 + 'deg)' }}>\n              {events.map((value, index) => {\n                let rotateX = index * (360 / cellCount)\n                let position = selectedIndex\n                if (selectedIndex < 0) {\n                  position = 18 + selectedIndex % events.length\n                }\n                let distanceFromSelected = Math.abs(Math.abs(index - ((position + (events.length / 2)) % events.length)) - events.length / 2)\n                return <div className=\"carousel__cell\" style={{ transform: 'rotateX(' + rotateX + 'deg) translateZ(120px)', opacity: 100 - 100 * distanceFromSelected / (cellCount / 2) + '%' }}>\n                  {value.title.rendered}<br />\n                  {value.acf.local} - {value.acf.date}\n                </div>\n              })}\n            </div>\n          </div>\n          <p style={{ textAlign: \"center\" }}>\n            <button className=\"previous-button\" onClick={() => this.previousEvent()}>Previous</button>\n            <button className=\"next-button\" onClick={() => this.nextEvent()}>Next</button>\n          </p>\n        </div >\n      );\n    }\n  }\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nclass Works extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n\n    fetch('https://rafaelmaia.000webhostapp.com/wp-json/wp/v2/projects')\n      .then(res => res.json())\n      .then(\n        (projects) => {\n          console.log(projects)\n          this.setState({\n            isLoaded: true,\n            events: projects\n          });\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, projects } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <div>\n          <h2>Works</h2>\n          <ul>\n            {projects.map((value, index) => {\n              return <li>{value.title.rendered}</li>\n            })}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n  \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}