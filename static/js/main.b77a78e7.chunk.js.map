{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","pathname","useLocation","className","to","src","logo","alt","Home","props","state","error","isLoaded","events","selectedIndex","cellCount","this","setState","console","log","intervalId","setInterval","timer","fetch","then","res","json","eventsTmp","length","concat","clearInterval","message","href","target","React","Component","Bio","Contact","name","email","subject","handleChange","bind","handleSubmit","event","value","formData","FormData","append","method","body","status","values","preventDefault","Container","fluid","Row","Col","xs","sm","md","lg","Form","onSubmit","Group","Control","type","placeholder","onChange","as","rows","Button","variant","Works","projects","map","index","title","rendered","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b77a78e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.3ec98529.svg\";","import React from 'react';\nimport {\n  Switch,\n  Route,\n  Link,\n  useLocation\n} from 'react-router-dom';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { IoIosSend } from 'react-icons/io';\n\nimport { Container, Row, Button, Col, Form } from 'react-bootstrap';\n\nfunction Navbar() {\n  const { pathname } = useLocation();\n\n  return (\n    <nav className=\"navbar navbar-expand fixed-top py-3\">\n      <div className=\"collapse navbar-collapse w-100\">\n        <ul className=\"navbar-nav mr-auto\">\n          {pathname !== '/' && pathname !== '/works' &&\n            <li className=\"nav-item\">\n              <Link to=\"/works\" className=\"nav-link\">Works</Link>\n            </li>\n          }\n          {pathname !== '/' && pathname !== '/bio' && pathname === '/works' &&\n            <li className=\"nav-item\">\n              <Link to=\"/bio\" className=\"nav-link\">Bio</Link>\n            </li>\n          }\n        </ul>\n      </div>\n      <div className=\"mx-auto\">\n        <Link to=\"/\" className=\"navbar-brand mx-auto d-none d-lg-inline-block\">NEURA of the NORTH</Link>\n        <Link to=\"/\" className=\"navbar-brand mx-auto d-lg-none d-inline-block\">\n          <img src={logo} alt=\"logo\" />\n        </Link>\n      </div>\n      <div className=\"navbar-collapse collapse w-100\">\n        <ul className=\"navbar-nav ml-auto\">\n          {pathname !== '/' && pathname !== '/bio' && pathname === '/contact' &&\n            <li className=\"nav-item\">\n              <Link to=\"/bio\" className=\"nav-link\">Bio</Link>\n            </li>\n          }\n          {pathname !== '/' && pathname !== '/contact' &&\n            <li className=\"nav-item\">\n              <Link to=\"/contact\" className=\"nav-link\">Contact</Link>\n            </li>\n          }\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <Navbar />\n      <Switch>\n        <Route path=\"/works\">\n          <Works />\n        </Route>\n        <Route path=\"/bio\">\n          <Bio />\n        </Route>\n        <Route path=\"/contact\">\n          <Contact />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      events: [],\n      selectedIndex: 0,\n      cellCount: 6\n    };\n  }\n\n  timer() {\n    this.setState({ selectedIndex: this.state.selectedIndex + 1 });\n  }\n\n  previousEvent() {\n    this.setState({\n      selectedIndex: this.state.selectedIndex - 1\n    });\n    console.log(this.state)\n  }\n  nextEvent() {\n    this.setState({\n      selectedIndex: this.state.selectedIndex + 1\n    });\n  }\n\n\n  componentDidMount() {\n    var intervalId = setInterval(() => this.timer(), 3000);\n    // store intervalId in the state so it can be accessed later:\n    this.setState({ intervalId: intervalId });\n\n    fetch('https://neuranorth.000webhostapp.com/wp-json/wp/v2/events', /*{\n      method: 'GET',\n      mode: 'no-cors',\n      withCredentials: true,\n      headers: {\n        'Content-Type': 'application/json',\n        'cookie': '__test=48031c46594cb39af38e8220a84d54de'\n      }\n    }*/)\n      .then(res => res.json())\n      .then(\n        (events) => {\n          console.log(events)\n          let eventsTmp = events\n          if (events.length > 0) {\n            while (events.length % this.state.cellCount !== 0) {\n              events = events.concat(eventsTmp)\n              console.log(events)\n            }\n          }\n\n          this.setState({\n            isLoaded: true,\n            events: events\n          });\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n\n  render() {\n    const { error, isLoaded, events, selectedIndex, cellCount } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <section>\n          {/*<h2>Events</h2>\n          <div className=\"scene\">\n            <div className=\"carousel\" style={{ transform: 'translateZ(-120px) rotateX(' + (selectedIndex / cellCount) * -360 + 'deg)' }}>\n              {events.map((value, index) => {\n                let rotateX = index * (360 / cellCount)\n                let position = selectedIndex\n                if (selectedIndex < 0) {\n                  position = 18 + selectedIndex % events.length\n                }\n                let distanceFromSelected = Math.abs(Math.abs(index - ((position + (events.length / 2)) % events.length)) - events.length / 2)\n                return <div className=\"carousel__cell\" style={{ transform: 'rotateX(' + rotateX + 'deg) translateZ(120px)', opacity: 100 - 100 * distanceFromSelected / (cellCount / 2) + '%' }}>\n                  {value.title.rendered}<br />\n                  {value.acf.local} - {value.acf.date}\n                </div>\n              })}\n            </div>\n          </div>\n          <p style={{ textAlign: \"center\" }}>\n            <button className=\"previous-button\" onClick={() => this.previousEvent()}>Previous</button>\n            <button className=\"next-button\" onClick={() => this.nextEvent()}>Next</button>\n          </p>*/}\n          <div>\n            <Link to=\"/works\">Works</Link>\n            <Link to=\"/bio\">Bio</Link>\n            <Link to=\"/contact\">Contact</Link>\n          </div>\n          <footer className=\"social-container\">\n            <div className=\"mx-auto\">\n              <a href=\"https://www.facebook.com/profile.php?id=100000174129300\" target=\"_blank\" ><span>FACEBOOK</span></a>\n              <span className=\"slash\"> / </span>\n              <a href=\"https://www.instagram.com/neuraofthenorth/\" target=\"_blank\"><span>INSTAGRAM</span></a>\n              <span className=\"slash\"> / </span>\n              <a href=\"https://www.youtube.com/user/rafael87909\" target=\"_blank\"><span>YOUTUBE</span></a>\n            </div>\n          </footer>\n        </section >\n      );\n    }\n  }\n}\n\nfunction Bio() {\n  return <h2>Bio</h2>;\n}\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      name: '',\n      email: '',\n      subject: '',\n      message: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    let formData = new FormData();\n\n    formData.append('your-name', this.state.name);\n    formData.append('your-email', this.state.email);\n    formData.append('your-subject', this.state.subject);\n    formData.append('your-message', this.state.message);\n\n    fetch('https://neuranorth.000webhostapp.com/wp-json/contact-form-7/v1/contact-forms/43/feedback', {\n      method: 'POST',\n      body: formData\n    })\n      .then(res => res.json())\n      .then(\n        (res) => {\n          console.log('ok')\n          console.log(res.status)\n          if (res.status === 'validation_failed') {\n            this.setState({ error: res })\n            console.log(this.state)\n          }\n          console.log(res)\n        },\n        (error) => {\n          console.log('erro')\n          console.log(error)\n        }\n      )\n    for (var value of formData.values()) {\n      console.log(value);\n    }\n    event.preventDefault();\n  }\n\n  render() {\n    const { error, name, email, subject, message } = this.state;\n    return (\n      <section>\n        <Container fluid>\n          <Row>\n            <Col xs=\"12\" sm=\"10\" md=\"8\" lg=\"4\" className=\"mx-auto\">\n              <p className=\"font-weight-bolder mb-0\">MAIL ME</p>\n              <a className=\"nostyle\" href={'mailto:rafamaianet@hotmail.com?subject=' + subject + '&body=' + message}>rafamaianet@hotmail.com</a>\n              <p className=\"my-4\">- or -</p>\n              <p className=\"font-weight-bolder mb-0\">FILL THE FORM BELOW</p>\n              {error &&\n                <p className=\"small text-danger error-message\">{error.message}</p>\n              }\n              <Form className=\"contact-form\" onSubmit={this.handleSubmit}>\n                <Form.Group>\n                  <Form.Control type=\"text\" placeholder=\"Name\" name=\"name\" value={name} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control type=\"email\" placeholder=\"name@example.com\" name=\"email\" value={email} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control type=\"text\" placeholder=\"Subject\" name=\"subject\" value={subject} onChange={this.handleChange} />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"Tell me more...\" name=\"message\" value={message} onChange={this.handleChange} />\n                </Form.Group>\n                <Button variant=\"dark\" type=\"submit\">SEND <IoIosSend /></Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </section >\n    );\n  }\n\n}\n\nclass Works extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      projects: []\n    };\n  }\n\n  componentDidMount() {\n\n    fetch('https://neuranorth.000webhostapp.com/wp-json/wp/v2/projects')\n      .then(res => res.json())\n      .then(\n        (projects) => {\n          console.log(projects)\n          this.setState({\n            isLoaded: true,\n            events: projects\n          });\n        },\n        (error) => {\n          console.log(error)\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    const { error, isLoaded, projects } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        <section>\n          <h2>Works</h2>\n          <ul>\n            {projects.map((value, index) => {\n              return <li>{value.title.rendered}</li>\n            })}\n          </ul>\n        </section>\n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n  <Router basename={process.env.PUBLIC_URL}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}